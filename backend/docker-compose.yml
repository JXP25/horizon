services:
  postgres:
    container_name: horizon-postgres
    restart: always
    build:
      context: ./docker
      dockerfile: Dockerfile.postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: vector
      POSTGRES_PASSWORD: jxp
      POSTGRES_DB: maps
    volumes:
      - horizon_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vector -d maps"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - horizon-network

  osm_import:
    container_name: horizon-osm-import
    build:
      context: ./docker
      dockerfile: Dockerfile.import
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data/coastline:/data/coastline:ro
      - ./data/country:/data/country:ro
      - ./data/states:/data/states:ro
    environment:
      PGHOST: horizon-postgres
      PGUSER: vector
      PGPASSWORD: jxp
      PGDATABASE: maps
    networks:
      - horizon-network

  backend:
    container_name: horizon-backend
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "4001:4001"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://vector:jxp@horizon-postgres:5432/maps?sslmode=disable
    networks:
      - horizon-network

  cloudbeaver:
    container_name: horizon-cloudbeaver
    image: dbeaver/cloudbeaver:latest
    restart: always
    ports:
      - "8080:8978"
    depends_on:
      - postgres
    environment:
      CB_SERVER_NAME: "CloudBeaver"
      CB_ADMIN_NAME: "admin"
      CB_ADMIN_PASSWORD: "admin"
      SERVER_SERVLET_CONTEXT_PATH: "/cloudbeaver"
    volumes:
      - horizon_cloudbeaver_data:/opt/cloudbeaver/workspace
    networks:
      - horizon-network

networks:
  horizon-network:
    driver: bridge

volumes:
  horizon_postgres_data:
  horizon_cloudbeaver_data:
